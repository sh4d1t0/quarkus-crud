#
# You need to provide the network in your docker with the following in your terminal:
#  docker network create your-network-name
#
# Then you need privided in your docker database in the following example, I used MySQL:
#  docker run --name TheNameContainer --network your-network-name -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:latest
#
# Then you need clean the target previous and package again with:
#  mvn clean package
#
# Then you need to build the docker package:
#  docker build -f src/main/docker/Dockerfile-profile -t TheTag/AndNameOfYourDocker .
#
# Then you need to initialize your docker with the following:
#  docker run --name TheNameThatYouWant --network your-network-name -p 8081:8081 -d TheTag/AndNameOfYourDocker
#
# Or you can use Dockerfile.jvm to build and use it with the next expose params in one line:
# docker run --name TheNameThatYouWant --network your-network-name -p 8081:8081
# -e JAVA_OPTS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dquarkus.profile=docker"
# -e DATABASE_USER=root
# -e DATABASE_PASSWORD=root
# -e DATABASE_NAME_URL="jdbc:mysql://MySQL:3306/orquestador"
# -d TheTag/AndNameOfYourDocker
#
# For more information:
# https://quarkus.io/guides/datasource
# https://quarkus.io/guides/config-reference
#
################################################################

FROM registry.access.redhat.com/ubi8/openjdk-17:1.14

ENV LANGUAGE='en_US:en'

# We make four distinct layers so if there are application changes the library layers can be re-used
COPY --chown=185 target/quarkus-app/lib/ /deployments/lib/
COPY --chown=185 target/quarkus-app/*.jar /deployments/
COPY --chown=185 target/quarkus-app/app/ /deployments/app/
COPY --chown=185 target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8081
USER 185

# Activate the profile (in this case is docker because my file is application-docker.properties, the documentation said application-{quarkus.profile}.properties)
ENV JAVA_OPTS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dquarkus.profile=docker"
ENV JAVA_APP_JAR="/deployments/quarkus-run.jar"

# Expose variables from database in jdbc with the name of my docker database, in this case the name of my conteiner docker is: MySQL
ENV DATABASE_NAME_URL="jdbc:mysql://MySQL:3306/orquestador"
ENV DATABASE_USER="root"
ENV DATABASE_PASSWORD="root"